---
import BaseLayout from '../layouts/BaseLayout.astro';
import DigitalClock from '../components/DigitalClock.jsx';
import AnalogClock from '../components/AnalogClock.jsx';
import Counter from '../components/Counter.jsx';
import DateBanner from '../components/DateBanner.jsx';
import Stopwatch from '../components/Stopwatch.jsx';
import Pomodoro from '../components/Pomodoro.jsx';
import TipCalc from '../components/TipCalc.jsx';
import ProgressRingDemo from '../components/ProgressRing.jsx';
import ContactForm from '../components/ContactForm.jsx';
import FilterList from '../components/FilterList.jsx';
import SortableTableDemo from '../components/SortableTable.jsx';
import ModalDemo from '../components/ModalDemo.jsx';
import TabsDemo from '../components/TabsDemo.jsx';
import AccordionDemo from '../components/AccordionDemo.jsx';
import ToastDemo from '../components/ToastDemo.jsx';
import PaginationDemo from '../components/PaginationDemo.jsx';


---
<BaseLayout title="Astro Example · Home" description="React clocks and counter with proportional layout.">
    <section class="card card--chip react-wrap">
        <h2 class="text-light react-title">React Examples</h2>

        <!-- Digital (full width) -->
        <div class="digital-row">
            <DigitalClock client:visible />
        </div>

        <!-- Two equal columns; equal height; exact shared top baseline -->
        <div class="react-grid">
            <!-- LEFT column -->
            <div class="col left">
                <h3 class="text-light col-head">Analog (React)</h3>
                <div class="col-body">
                    <AnalogClock client:visible />
                </div>
            </div>

            <!-- RIGHT column (strict 50/50 split) -->
            <div class="col right">
                <div class="right-grid">
                    <!-- RIGHT / TOP (Date + Chip) -->
                    <div class="right-top">
                        <DateBanner client:load />
                        <div class="chip-box">
                            <div class="chip-name" aria-label="Chip">Chip</div>
                        </div>
                    </div>
                    <!-- Divider across right column only -->
                    <div class="right-divider" role="presentation"></div>
                    <!-- RIGHT / BOTTOM (Counter) -->
                    <div class="right-bottom">
                        <Counter client:idle initial={0} />
                    </div>
                </div>
            </div>

            <!-- Full-height vertical divider -->
            <div class="v-divider" role="presentation"></div>
        </div>
    </section>
    <br><br>
    <section class="card card--green">
        <h2 class="text-light center">Common UI Patterns</h2>

        <div class="grid">
            <article class="util">
                <h3 class="text-light">Tabs</h3>
                <TabsDemo client:visible />
            </article>

            <article class="util">
                <h3 class="text-light">Accordion</h3>
                <AccordionDemo client:visible />
            </article>

            <article class="util">
                <h3 class="text-light">Toasts</h3>
                <ToastDemo client:visible />
            </article>

            <article class="util">
                <h3 class="text-light">Pagination</h3>
                <PaginationDemo client:visible />
            </article>
        </div>
    </section>

    <style>
        .card--green{
            background:#16a34a; /* Tailwind green-600 */
            color:#fff;
            border:1.5px solid rgba(255,255,255,.95);
            border-radius:10px;
            box-shadow:0 0 0 2px rgba(255,255,255,.12) inset, 0 10px 28px rgba(0,0,0,.25);
            padding:1.2rem;
            margin-top:2rem;
        }
        .center{ text-align:center }
        .grid{ display:grid; grid-template-columns:1fr; gap:1.5rem }
        @media (min-width:900px){ .grid{ grid-template-columns:1fr 1fr } }
        .util h3{ margin-bottom:.5rem; text-align:center }
    </style>

    <!-- === New React Utilities Panel ====================================== -->
    <section class="card card--chip utils-wrap">
        <h2 class="text-light utils-title">React Utilities</h2>

        <div class="utils-grid">
            <article class="chip-card util">
                <h3 class="text-light util-head">Stopwatch</h3>
                <Stopwatch client:visible />
            </article>

            <article class="chip-card util">
                <h3 class="text-light util-head">Pomodoro</h3>
                <Pomodoro client:visible />
            </article>

            <article class="chip-card util">
                <h3 class="text-light util-head">Tip Calculator</h3>
                <TipCalc client:visible />
            </article>

            <article class="chip-card util">
                <h3 class="text-light util-head">Progress Ring</h3>
                <ProgressRingDemo client:visible />
            </article>
        </div>
    </section>
    <!-- === Practical React Patterns ======================================= -->
    <section class="card card--chip patterns-wrap">
        <h2 class="text-light patterns-title">React Patterns</h2>

        <div class="patterns-grid">
            <article class="chip-card pat">
                <h3 class="text-light pat-head">Contact Form</h3>
                <ContactForm client:visible />
            </article>

            <article class="chip-card pat">
                <h3 class="text-light pat-head">Filterable List</h3>
                <FilterList client:visible />
            </article>

            <article class="chip-card pat">
                <h3 class="text-light pat-head">Sortable Table</h3>
                <SortableTableDemo client:visible />
            </article>

            <article class="chip-card pat">
                <h3 class="text-light pat-head">Modal</h3>
                <ModalDemo client:visible />
            </article>
        </div>
    </section>

    <style>
        .patterns-wrap{ --gap: clamp(12px, 2vw, 18px) }
        .patterns-title{ text-align:center; margin: 0 0 1.5rem }
        .patterns-grid{
            display:grid; grid-template-columns:1fr; gap: var(--gap);
        }
        @media (min-width:900px){
            .patterns-grid{ grid-template-columns:1fr 1fr; }
        }
        .pat{ padding:16px }
        .pat-head{ margin:0 0 10px; text-align:center }
    </style>


    <style>
        .utils-wrap{
            --rhythm: 12px;
            --gap: clamp(12px, 2vw, 18px);
        }
        .utils-title{ text-align:center; margin:0 0 calc(var(--rhythm) * 2) }
        .utils-grid{
            display:grid;
            grid-template-columns:1fr;
            gap: var(--gap);
        }
        @media (min-width:900px){
            .utils-grid{ grid-template-columns:1fr 1fr; }
        }
        .util{ padding:16px }
        .util-head{ margin:0 0 10px; text-align:center }
    </style>

</BaseLayout>

<style>
    /* ---------- Shared variables ---------- */
    .react-wrap{
        --rhythm: 12px;
        --colWidth: clamp(18rem, 46vw, 520px);
        --divider: rgba(255,255,255,.35);
    }

    .react-title{ text-align:center; margin:0 0 calc(var(--rhythm) * 2) }
    .digital-row{ text-align:center; margin: calc(var(--rhythm) * 1.5) 0 calc(var(--rhythm) * 2) }

    /* ---------- Two equal columns; equal height ---------- */
    .react-grid{
        position:relative;
        display:grid;
        grid-template-columns: 1fr;
        column-gap: calc(var(--rhythm) * 1.5);
        row-gap: calc(var(--rhythm) * 1.5);
        align-items: stretch; /* equal heights */
    }
    @media (min-width:900px){
        .react-grid{ grid-template-columns: 1fr 1fr; }
    }

    /* IDENTICAL top baseline on both columns: no extra top padding anywhere */
    .col{ display:flex; flex-direction:column; }
    .col-head{ margin:0 0 var(--rhythm); text-align:center }
    .col-body{ max-width: var(--colWidth); margin-inline:auto }

    /* RIGHT column: strict 50/50 split with a 2px middle row */
    .right-grid{
        display:grid;
        grid-template-rows: 1fr 2px 1fr;  /* top | divider | bottom */
        height:100%;
    }

    /* Top & bottom areas centered, no hidden vertical padding at the top */
    .right-top,
    .right-bottom{
        display:flex; flex-direction:column; align-items:center; justify-content:center;
        padding: 0 calc(var(--rhythm) * 1); /* horizontal padding only */
        gap: calc(var(--rhythm) * 1);
    }

    .right-divider{ background: var(--divider); border-radius:2px; }

    /* Full-height vertical divider perfectly centered */
    @media (min-width:900px){
        .v-divider{
            position:absolute; top:0; bottom:0; left:50%;
            width:2px; transform:translateX(-1px);
            background: var(--divider); border-radius:2px;
        }
    }

    /* Chip styling (balanced, unclipped) */
    @import url('https://fonts.googleapis.com/css2?family=Pacifico&display=swap');
    .chip-box{ display:flex; align-items:center; justify-content:center; min-height:0 }
    .chip-name{
        position:relative;
        font-family:'Pacifico', cursive;
        font-size: clamp(2.3rem, 5.4vw, 3.2rem); /* ↓ slightly for balance vs. counter */
        line-height:1.3;
        padding-bottom:6px; /* descender clearance */
        background: linear-gradient(90deg, #ffffff, #dbeafe);
        -webkit-background-clip:text; background-clip:text; color:transparent;
        text-shadow: 0 2px 10px rgba(0,0,0,.25), 0 0 1px rgba(255,255,255,.35);
    }
    .chip-name::after{
        content:""; position:absolute; left:50%; transform:translateX(-50%);
        bottom:-10px; width:58%; height:4px; border-radius:999px;
        background:linear-gradient(90deg, transparent, rgba(255,255,255,.7), transparent);
        box-shadow:0 4px 14px rgba(0,0,0,.2);
    }
</style>
