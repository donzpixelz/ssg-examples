---
import BaseLayout from '../layouts/BaseLayout.astro';
import DigitalClock from '../components/DigitalClock.jsx';
import AnalogClock from '../components/AnalogClock.jsx';
import Counter from '../components/Counter.jsx';

const posts = (await Astro.glob('./posts/*.md'))
    .sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date))
    .slice(0, 8);
---
<BaseLayout
        title="Astro Example · Home"
        description="A meaningful Astro homepage: what Astro is, why you'd use it, and how this demo is set up."
>
    <section class="card">
        <h1>Astro Example</h1>
        <p>
            <strong>Astro is a content-first static site builder</strong> that ships
            <em> zero JavaScript by default</em> and only hydrates interactive
            “islands” when you ask it to.
        </p>
    </section>

    <section class="card">
        <h2>What Astro is (quick)</h2>
        <ul>
            <li><strong>Islands architecture:</strong> hydrate only what needs JS.</li>
            <li>
                <strong>Hydration directives:</strong>
                <code>client:load</code>, <code>client:visible</code>, <code>client:idle</code>.
            </li>
            <li><strong>Framework-agnostic:</strong> React/Vue/Svelte/Solid + Markdown.</li>
            <li><strong>Fast by default:</strong> minimal JS; great Core Web Vitals.</li>
        </ul>
    </section>

    <!-- React section -->
    <section class="card card--chip react-wrap">
        <h2 class="text-light react-title">React Examples</h2>

        <!-- Digital (full width, centered) -->
        <article class="chip-card digital-block">
            <h3 class="text-light sr-only">Digital (React)</h3>
            <DigitalClock client:visible />
        </article>

        <!-- Two equal columns -->
        <div class="react-grid">
            <!-- Left: Analog -->
            <article class="chip-card analog-cell">
                <h3 class="text-light analog-head">Analog (React)</h3>
                <div class="analog-wrap">
                    <AnalogClock client:visible />
                </div>
            </article>

            <!-- Right: Date/Chip (top half) + Counter (bottom half) -->
            <article class="chip-card counter-cell">
                <Counter client:idle initial={0} />
            </article>
        </div>
    </section>

    <section class="card">
        <h2>Latest posts</h2>
        {posts.length === 0 ? (
                <p>No posts yet. Add one in <code>src/pages/posts/</code>, then rebuild.</p>
        ) : (
            posts.map((p) => (
                    <div class="list-item">
                        <a href={p.url}><strong>{p.frontmatter.title}</strong></a>
                        {p.frontmatter.date && (
                                <small>
                                    {' '}—{' '}
                                    {new Date(p.frontmatter.date).toLocaleDateString(undefined, {
                                        month: 'short',
                                        day: 'numeric',
                                        year: 'numeric',
                                    })}
                                </small>
                        )}
                    </div>
            ))
        )}
    </section>
</BaseLayout>

<style>
    .react-title{ text-align:center; margin:0 0 1.25rem }

    /* More air under the digital slab */
    .digital-block{ margin-top:.9rem; margin-bottom:1.25rem; text-align:center }

    /* Two equal columns; shared sizing and a FULL-HEIGHT vertical divider */
    .react-grid{
        --colWidth: clamp(18rem, 46vw, 520px);
        --vpad: 0.5rem;               /* vertical inset for the divider inside the blue card */
        --dividerColor: rgba(255,255,255,.35);

        position: relative;           /* for the ::after divider */
        display: grid;
        grid-template-columns: 1fr;
        row-gap: 1.25rem;
        column-gap: 1rem;
        align-items: stretch;         /* make columns equal height */
    }
    @media (min-width:900px){
        .react-grid{ grid-template-columns: 1fr 1fr; }
    }
    /* center vertical divider that spans the full content height */
    @media (min-width:900px){
        .react-grid::after{
            content:"";
            position:absolute;
            left: 50%;
            top: var(--vpad);
            bottom: var(--vpad);
            transform: translateX(-0.5px); /* crisp 1-2px line */
            width: 2px;
            background: var(--dividerColor);
            border-radius: 2px;
        }
    }

    /* Heading establishes the alignment line under the digital clock */
    .analog-head{ text-align:center; margin:1rem 0 1rem; }

    /* Keep analog contained and centered */
    .analog-wrap{ max-width: var(--colWidth); margin-inline:auto; }

    /* Right column should stretch full height to match the left */
    .counter-cell{
        display:flex;
        justify-content:center;
        align-items:stretch;
        min-height: 100%;
    }

    .sr-only{
        position:absolute!important; width:1px; height:1px; padding:0; margin:-1px;
        overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0;
    }
</style>
