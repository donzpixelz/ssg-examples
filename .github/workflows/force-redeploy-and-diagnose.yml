name: Force redeploy & diagnose

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  REMOTE_DIR: /var/www/ssg-examples/site
  ARTIFACT_PREFIX: ssg-examples/artifacts

permissions:
  id-token: write
  contents: read

jobs:
  diag:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ssg-examples-${{ github.run_id }}

      - name: Package ./app (tar.gz)
        id: pack
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p artifact
          # inject a marker file to ensure a change
          echo "diag marker $GITHUB_RUN_ID $(date -u +%s)" > app/.deploy_marker.txt
          tar -C "./app" -czf artifact/site.tgz .
          echo "path=artifact/site.tgz" >> "$GITHUB_OUTPUT"

      - name: Ensure bucket & upload
        id: up
        shell: bash
        run: |
          set -euo pipefail
          ACCOUNT_ID="$(aws sts get-caller-identity --query Account --output text)"
          BUCKET="ssg-examples-artifacts-${ACCOUNT_ID}-${AWS_REGION}"
          KEY="${{ env.ARTIFACT_PREFIX }}/${{ github.sha }}.tgz"
          if ! aws s3api head-bucket --bucket "$BUCKET" >/dev/null 2>&1; then
            aws s3api create-bucket --bucket "$BUCKET" --region "$AWS_REGION" --create-bucket-configuration LocationConstraint="$AWS_REGION"
            aws s3api put-bucket-versioning --bucket "$BUCKET" --versioning-configuration Status=Enabled
            aws s3api put-public-access-block --bucket "$BUCKET" --public-access-block-configuration BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true
          fi
          aws s3 cp "${{ steps.pack.outputs.path }}" "s3://$BUCKET/$KEY"
          echo "bucket=$BUCKET" >> "$GITHUB_OUTPUT"
          echo "key=$KEY"       >> "$GITHUB_OUTPUT"

      - name: Presign & set env
        shell: bash
        run: |
          set -euo pipefail
          URL="$(aws s3 presign "s3://${{ steps.up.outputs.bucket }}/${{ steps.up.outputs.key }}" --expires-in 3600)"
          echo "ARTIFACT_URL=$URL" >> "$GITHUB_ENV"
          echo "INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID }}" >> "$GITHUB_ENV"
          echo "MARKER=DEPLOY_MARKER_${GITHUB_RUN_ID}_$(date -u +%s)" >> "$GITHUB_ENV"

      - name: Run remote diag
        shell: bash
        run: |
          set -euo pipefail
          AWS_REGION="${AWS_REGION}" REMOTE_DIR="${REMOTE_DIR}" ARTIFACT_URL="${ARTIFACT_URL}" INSTANCE_ID="${INSTANCE_ID}" MARKER="${MARKER}" \
          bash scripts/diag-remote.sh

      - name: Helpful link
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          IP="$(aws ec2 describe-instances --region "${AWS_REGION}" --instance-ids "${INSTANCE_ID}" --query 'Reservations[0].Instances[0].PublicIpAddress' --output text || true)"
          echo "IP: $IP"
          if [ -n "$IP" ] && [ "$IP" != "None" ]; then
            echo "Open: http://$IP/?buster=$(date +%s)"
          fi
