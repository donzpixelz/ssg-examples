name: deploy-site-ssm

on:
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      BUCKET: ${{ secrets.DEPLOY_S3_BUCKET }}
      INSTANCE_ID: ${{ secrets.SSM_INSTANCE_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Package ./app
        run: |
          set -euo pipefail
          tar -czf app.tgz -C ./app .

      - name: Upload artifacts to S3 with fresh key
        run: |
          set -euo pipefail
          KEY_PREFIX="examples/artifacts/${GITHUB_SHA}"
          aws s3 cp app.tgz "s3://${BUCKET}/${KEY_PREFIX}/app.tgz" --region "$AWS_REGION"
          aws s3 cp run.sh "s3://${BUCKET}/${KEY_PREFIX}/run.sh" --region "$AWS_REGION"

          APP_URL="$(aws s3 presign "s3://${BUCKET}/${KEY_PREFIX}/app.tgz" --region "$AWS_REGION" --expires-in 3600)"
          RUN_URL="$(aws s3 presign "s3://${BUCKET}/${KEY_PREFIX}/run.sh" --region "$AWS_REGION" --expires-in 3600)"

          echo "APP_URL=$APP_URL" >> "$GITHUB_ENV"
          echo "RUN_URL=$RUN_URL" >> "$GITHUB_ENV"

      - name: SSM: run deploy on EC2
        run: |
          set -euo pipefail
          # Build SSM payload with safe JSON quoting via jq
          PAYLOAD="$(jq -nc --arg inst "$INSTANCE_ID" --arg run "$RUN_URL" --arg app "$APP_URL" '{
              DocumentName: "AWS-RunShellScript",
              InstanceIds: [$inst],
              Parameters: {
                commands: [
                  "set -euo pipefail",
                  "curl -fsSL -o /tmp/run.sh \($run)",
                  "chmod +x /tmp/run.sh",
                  "/tmp/run.sh \($app)"
                ]
              }
            }')"
          aws ssm send-command --cli-input-json "$PAYLOAD" --region "$AWS_REGION" >/dev/null

      - name: Note
        run: |
          echo "Dispatched deploy to EC2 via SSM."
