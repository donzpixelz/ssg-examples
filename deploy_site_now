#!/usr/bin/env bash
# Full, copy-pasteable Bash file
# Safe to run (will NOT auto-close your terminal)
# File: deploy_site_now

set -euo pipefail

MSG="${1:-site: update}"

# ---- optional log ----
LOG="/tmp/deploy_site_now.log"
{ echo; echo "===== $(date +'%Y-%m-%d %H:%M:%S') :: deploy_site_now START ====="; } >>"$LOG"
exec > >(tee -a "$LOG") 2>&1

# ---- repo root ----
if ! ROOT="$(git rev-parse --show-toplevel 2>/dev/null)"; then
  echo "❌ Not inside a git repository."
  exit 1
fi
cd "$ROOT"
echo "📁 Repo: $ROOT"

# ---- branch ----
CURBR="$(git branch --show-current 2>/dev/null || true)"
if [[ -z "$CURBR" ]]; then
  echo "❌ Cannot determine current branch."
  exit 1
fi
echo "🌿 Branch: $CURBR"

# ---- stage & commit if needed ----
git add -A
if git diff --cached --quiet; then
  echo "ℹ️  No local changes to commit."
else
  echo "📝 Commit: $MSG"
  git commit -m "$MSG"
fi

# ---- ensure remote, rebase, push ----
if ! git remote get-url origin >/dev/null 2>&1; then
  echo "❌ No 'origin' remote configured."
  exit 1
fi

echo "⬇️  Fetch & rebase..."
git fetch origin
git pull --rebase origin "$CURBR" || {
  echo "❌ Rebase failed. Resolve conflicts, then re-run."
  exit 1
}

echo "⬆️  Push..."
git push -u origin "$CURBR"

# ---- trigger GitHub Actions workflow (no inputs) ----
WORKFLOW_FILE="deploy-site-ssm.yml"
if command -v gh >/dev/null 2>&1; then
  echo "🚀 Triggering workflow: ${WORKFLOW_FILE}"
  gh workflow run "${WORKFLOW_FILE}" --ref "$CURBR" || echo "⚠️  Workflow dispatch may not have been created."
else
  echo "⚠️  GitHub CLI ('gh') not found; skipping workflow trigger."
fi

# ---- OPEN THE REPO ACTIONS TAB EXACTLY (/actions) ----
# Prefer gh to get owner/repo; fallback to parsing origin URL.
REPO_PATH=""
if command -v gh >/dev/null 2>&1; then
  REPO_PATH="$(gh repo view --json nameWithOwner -q .nameWithOwner 2>/dev/null || true)"
fi
if [[ -z "$REPO_PATH" ]]; then
  ORIGIN_URL="$(git remote get-url origin)"
  # Normalize to owner/repo (strip protocol/ssh prefix and .git)
  REPO_PATH="$(printf '%s\n' "$ORIGIN_URL" \
    | sed -E 's#\.git$##; s#^git@github\.com:##; s#^https?://github\.com/##' \
    | cut -d/ -f1-2)"
fi

if [[ -n "$REPO_PATH" ]]; then
  ACTIONS_URL="https://github.com/${REPO_PATH}/actions"
  echo "🌐 Opening Actions tab: ${ACTIONS_URL}"
  if command -v open >/dev/null 2>&1; then
    open "$ACTIONS_URL" || true
  elif command -v xdg-open >/dev/null 2>&1; then
    xdg-open "$ACTIONS_URL" || true
  else
    echo "🔗 ${ACTIONS_URL}"
  fi
else
  echo "ℹ️  Could not determine repo slug; open your repo’s Actions tab manually."
fi

echo "✅ Done: committed/pushed, dispatched workflow, opened the Actions tab."
echo "===== $(date +'%Y-%m-%d %H:%M:%S') :: deploy_site_now END =====" >>"$LOG"
# ✅ Done: full script above
