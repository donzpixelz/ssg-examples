#!/usr/bin/env bash
# Minimal local → GitHub → EC2 (SSH) deploy.
# Does ONLY:
#   1) Push whole project to GitHub (Git honors .gitignore)
#   2) Mirror project to server; sync app/ and nginx/ as-is
#   3) nginx -t && reload (no config writing)

set -Eeuo pipefail

# Filled in by installer:
SSH_KEY="/Users/donwilson/.ssh/ssg-examples-key.pem"
EC2_IP="18.220.33.0"

PROJECT_ROOT="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
REMOTE_REPO="/opt/ssg-examples/repo"
DOCROOT="/usr/share/nginx/html"
CONF_DIR="/etc/nginx/conf.d"
APP_DIR="$PROJECT_ROOT/app"
NGINX_DIR="$PROJECT_ROOT/nginx"

# Keep [skip ci] if you do NOT want Actions to run
MSG="${1:-site: local SSH deploy [skip ci]}"
BRANCH="$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo main)"

# 1) Push to GitHub (respects .gitignore)
git add -A || true
if ! git diff --cached --quiet; then
  git commit -m "$MSG" || true
fi
git push origin "$BRANCH" || true

# 2) Local → server via rsync (respects .gitignore; no nginx edits)
[ -f "$SSH_KEY" ] || { echo "❌ SSH key not found: $SSH_KEY"; exit 1; }
[ -n "$EC2_IP" ]  || { echo "❌ EC2_IP is empty"; exit 1; }

ssh -i "$SSH_KEY" -o StrictHostKeyChecking=no ec2-user@"$EC2_IP" 'bash -se' <<'SSH'
set -Eeuo pipefail
if ! command -v rsync >/dev/null 2>&1; then
  if command -v yum >/dev/null 2>&1; then sudo yum install -y -q rsync >/dev/null
  elif command -v dnf >/dev/null 2>&1; then sudo dnf install -y -q rsync >/dev/null
  elif command -v apt-get >/dev/null 2>&1; then sudo apt-get update -y >/dev/null && sudo apt-get install -y -q rsync >/dev/null
  fi
fi
sudo mkdir -p /opt/ssg-examples/repo /usr/share/nginx/html /etc/nginx/conf.d
SSH

RSYNC_SSH=( -e "ssh -i $SSH_KEY -o StrictHostKeyChecking=no" --rsync-path="sudo rsync" )
FILTER=( --filter=':- .gitignore' )
EXCLUDES=( --exclude ".git/" --exclude ".git/**" --exclude ".DS_Store" )

# Mirror entire project (reference copy on server)
rsync -az --delete "${FILTER[@]}" "${EXCLUDES[@]}" "${RSYNC_SSH[@]}" "$PROJECT_ROOT"/ ec2-user@"$EC2_IP":"$REMOTE_REPO"/

# Runtime content: app/ → docroot
if [ -d "$APP_DIR" ]; then
  rsync -az --delete "${FILTER[@]}" "${EXCLUDES[@]}" "${RSYNC_SSH[@]}" "$APP_DIR"/ ec2-user@"$EC2_IP":"$DOCROOT"/
fi

# Server conf: nginx/ → conf.d (as-is; no generation here)
if [ -d "$NGINX_DIR" ]; then
  rsync -az --delete "${EXCLUDES[@]}" "${RSYNC_SSH[@]}" "$NGINX_DIR"/ ec2-user@"$EC2_IP":"$CONF_DIR"/
fi

# 3) nginx -t && reload (no content changes)
ssh -i "$SSH_KEY" -o StrictHostKeyChecking=no ec2-user@"$EC2_IP" 'bash -se' <<'SSH'
set -Eeuo pipefail
BIN="/usr/sbin/nginx"; command -v "$BIN" >/dev/null 2>&1 || BIN="$(command -v nginx || true)"
if [ -n "$BIN" ]; then
  sudo "$BIN" -t
  sudo systemctl reload nginx || sudo "$BIN" -s reload || true
fi
# Minimal visibility (avoid SIGPIPE)
echo "--- DOCROOT ---"
sudo ls -la /usr/share/nginx/html | sed -n '1,40p' || true
SSH

echo "✅ Local push → GitHub AND local → server sync complete → http://$EC2_IP/?buster=$(date +%s)"
